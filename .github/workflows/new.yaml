name: Check Recent Committers and Notify Non-Committers

on:
  schedule:
    - cron: "0 0 * * *"  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-recent-committers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install and Configure msmtp
        run: |
          sudo apt-get update && sudo apt-get install -y msmtp
          cat <<EOF > ~/.msmtprc
          defaults
          auth           login
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          logfile        ~/.msmtp.log
          account hostinger
          host smtp.hostinger.com
          port 587
          user "${{ secrets.EMAIL_USERNAME }}"
          password "${{ secrets.EMAIL_PASSWORD }}"
          from "${{ secrets.EMAIL_USERNAME }}"
          account default : hostinger
          EOF
          chmod 600 ~/.msmtprc
      
      - name: List Collaborators and Check Commit Activity
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MANAGER_USERNAME: "Yogesh-TDTL"  # Replace with actual manager's GitHub username
          EMAIL_USERNAME: "${{ secrets.EMAIL_USERNAME }}"
          RECIPIENT_EMAIL: "yogesh.more@thedatatechlabs.com"
        run: |
          echo "Fetching Collaborators..."
          COLLABORATORS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/collaborators" \
               | jq -r '.[].login')
          
          echo "Collaborators List:"
          echo "$COLLABORATORS"
          
          echo "\nChecking Commit Activity for the Last 24 Hours..."
          NON_COMMITTED_LIST=""

          for user in $COLLABORATORS; do
            if [ "$user" = "$MANAGER_USERNAME" ]; then
              continue  # Skip manager
            fi
            
            echo "Checking commits for: $user"
            RECENT_COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 "https://api.github.com/repos/${{ github.repository }}/commits?author=$user&since=$(date -u -d '24 hours ago' +"%Y-%m-%dT%H:%M:%SZ")" \
                 | jq length)
            
            if [ "$RECENT_COMMITS" -eq 0 ]; then
              NON_COMMITTED_LIST+="$user\n"
              EMAIL_TO="yogesh.more@thedatatechlabs.com"  # Modify email pattern if needed
              printf "From: $EMAIL_USERNAME\nTo: $EMAIL_TO\nSubject: Reminder - No Commit Today!\n\nHello ${user},\n\nThis is a reminder that as of now, no commit has been recorded from your end in the repository today. Please ensure that you push your updates before the end of the day to stay aligned with our workflow.\n\nIf thereâ€™s any issue preventing you from committing, let me know immediately.\n\nLooking forward to your update.\n\nBest,\nCloud Team" | msmtp --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$EMAIL_TO"
              echo "Reminder email sent to: $EMAIL_TO"
            fi
          done
          
          echo -e "\nNon-Committers (Last 24 Hours):"
          echo -e "$NON_COMMITTED_LIST"
          
          # Send report to manager
          if [[ -n "$NON_COMMITTED_LIST" ]]; then
            printf "From: $EMAIL_USERNAME\nTo: $RECIPIENT_EMAIL\nSubject: Daily Commit Report - Non-Committers\n\nHello Team,\n\nDespite the reminder sent yesterday, the following users have not committed any updates to the repository:\n\n$NON_COMMITTED_LIST\n\nThis is a breach of our workflow requirements. I have sent a follow-up email instructing immediate action.\n\nPlease advise on the next steps if no action is taken.\n\nBest Regards,\nCloud Team" | msmtp --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$RECIPIENT_EMAIL"
            echo "Manager report sent to: $RECIPIENT_EMAIL"
          else
            echo "All users committed. No report sent."
          fi
