name: Test Notify Non-Committers via Mail
on:
  workflow_dispatch:  # Manual trigger for testing

jobs:
  check-commits:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MANAGER_USERNAME: "Yogesh-TDTL"
      DEVELOPER_EMAIL: "yogesh.more@thedatatechlabs.com"
      MANAGER_EMAIL: "yogesh.more@thedatatechlabs.com"
    outputs:
      HAS_COMMITTED: ${{ env.HAS_COMMITTED }}
    steps:
      - name: Fetch Collaborators (Excluding Manager)
        id: fetch_collaborators
        run: |
          echo "Fetching repository collaborators..."
          COLLABORATORS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                              -H "Accept: application/vnd.github.v3+json" \
                              "https://api.github.com/repos/${{ github.repository }}/collaborators" | jq -r '.[].login')

          # Remove manager from list
          DEVELOPERS=$(echo "$COLLABORATORS" | grep -v -w "$MANAGER_USERNAME" || true)
          echo "Final developer list (excluding manager): $DEVELOPERS"
          
          echo "$DEVELOPERS" | tee developers.txt  # Debug to check if it's empty

      - name: Debug Developer Email
        run: |
          echo "Developer Email: $DEVELOPER_EMAIL"

      - name: Fetch Commits in Last Hour (For Testing)
        id: check_commits
        run: |
          ONE_HOUR_AGO=$(date -u -d "1 hour ago" +"%Y-%m-%dT%H:%M:%SZ")
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          echo "Checking commits from $ONE_HOUR_AGO to $NOW..."

          HAS_COMMITTED="false"
          while IFS= read -r DEV; do
            COMMIT_COUNT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                            "https://api.github.com/repos/${{ github.repository }}/commits?since=$ONE_HOUR_AGO&until=$NOW&author=$DEV" \
                            | jq 'length')

            if [ "$COMMIT_COUNT" -gt 0 ]; then
              echo "$DEV has committed."
              HAS_COMMITTED="true"
            fi
          done < developers.txt

          echo "HAS_COMMITTED=$HAS_COMMITTED" >> $GITHUB_ENV

  send-emails:
    needs: check-commits
    runs-on: ubuntu-latest
    steps:
      - name: Install and Configure msmtp
        run: |
          sudo apt-get update && sudo apt-get install -y msmtp
          cat <<EOF > ~/.msmtprc
          defaults
          auth           login
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          logfile        ~/.msmtp.log
          account hostinger
          host smtp.hostinger.com
          port 465
          user "${{ secrets.EMAIL_USERNAME }}"
          password "${{ secrets.EMAIL_PASSWORD }}"
          from "${{ secrets.EMAIL_USERNAME }}"
          account default : hostinger
          EOF
          chmod 600 ~/.msmtprc

      - name: Debug Outputs
        run: |
          echo "HAS_COMMITTED from check-commits: ${{ needs.check-commits.outputs.HAS_COMMITTED }}"

      - name: Send Test Email if No Commit
        if: needs.check-commits.outputs.HAS_COMMITTED == 'false'
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        run: |
          if [[ -z "$DEVELOPER_EMAIL" ]]; then
            echo "Error: DEVELOPER_EMAIL is empty. Exiting."
            exit 1
          fi

          echo "Sending email to $DEVELOPER_EMAIL"
          printf "From: $EMAIL_USERNAME\nTo: $DEVELOPER_EMAIL\nSubject: ⚠️ Test Reminder - No Commit in Last Hour\n\nHello,\n\nThis is a test email. You haven't committed anything in the last hour.\n\nBest,\nCloud Team" | msmtp --debug --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$DEVELOPER_EMAIL"

      - name: Print msmtp Logs (Debug)
        run: |
          cat ~/.msmtp.log || echo "No msmtp logs found."

      - name: Send Test Summary Report to Manager
        if: needs.check-commits.outputs.HAS_COMMITTED == 'false'
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        run: |
          echo "Sending email to $MANAGER_EMAIL"
          printf "From: $EMAIL_USERNAME\nTo: $MANAGER_EMAIL\nSubject: Test Daily Commit Report - Non-Committers\n\nHello,\n\nThis is a test report. The following developer did not commit in the last hour:\n\nDeveloper: falguni.jadhav\n\nRegards,\nCloud Team" | msmtp --debug --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$MANAGER_EMAIL"
