name: updated

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"  # Test Mode (Replace with 0 13 * * * for 7 PM Reminder)
    - cron: "*/10 * * * *"  # Test Mode (Replace with 0 3 * * * for 9 AM Report)

jobs:
  list-collaborators-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Collaborators
        id: collaborators
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching Collaborators..."
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/collaborators" | jq -r '.[].login' > collaborators.txt
          
          MANAGERS=("ImranTDTL")
          grep -vxF -f <(printf "%s\n" "${MANAGERS[@]}") collaborators.txt > temp.txt && mv temp.txt collaborators.txt

      - name: Fetch Committers Before 7 PM
        id: committers_7pm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SEVEN_PM_UTC=$(date -u +"%Y-%m-%dT13:30:00Z") 
          TODAY=$(date -u +"%Y-%m-%dT00:00:00Z")

          echo "Fetching committers before 7 PM..."
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/commits?since=$TODAY&until=$SEVEN_PM_UTC" | jq -r '.[] | select(.author != null) | .author.login' | sort -u > committers_7pm.txt

      - name: Find Non-Committers Before 7 PM
        id: non_committers_7pm
        run: |
          awk 'NF' collaborators.txt | sort -u > collaborators_clean.txt
          awk 'NF' committers_7pm.txt | sort -u > committers_clean.txt
          comm -23 collaborators_clean.txt committers_clean.txt > non_committers_7pm.txt

      - name: Fetch Committers After 7 PM
        id: committers_after_7pm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SEVEN_PM_UTC=$(date -u +"%Y-%m-%dT13:30:00Z")
          NINE_AM_UTC=$(date -u +"%Y-%m-%dT03:30:00Z")

          echo "Fetching committers after 7 PM..."
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/commits?since=$SEVEN_PM_UTC&until=$NINE_AM_UTC" | jq -r '.[] | select(.author != null) | .author.login' | sort -u > committers_after_7pm.txt

      - name: Find Final Non-Committers (For 9 AM Report)
        id: final_non_committers
        run: |
          awk 'NF' committers_after_7pm.txt | sort -u > committers_after_7pm_clean.txt
          comm -23 non_committers_7pm.txt committers_after_7pm_clean.txt > final_non_committers.txt

      - name: Install and Configure msmtp
        run: |
          sudo apt-get update && sudo apt-get install -y msmtp
          cat <<EOF > ~/.msmtprc
          defaults
          auth           login
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          logfile        ~/.msmtp.log
          account hostinger
          host smtp.hostinger.com
          port 465
          user "${{ secrets.EMAIL_USERNAME }}"
          password "${{ secrets.EMAIL_PASSWORD }}"
          from "${{ secrets.EMAIL_USERNAME }}"
          account default : hostinger
          EOF
          chmod 600 ~/.msmtprc

      - name: Send 7 PM Reminder
        if: github.event.schedule == '*/5 * * * *' && success() && hashFiles('non_committers_7pm.txt') != ''
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        run: |
          while IFS= read -r user; do
            EMAIL_TO="yogesh.more@thedatatechlabs.com"
            printf "From: $EMAIL_USERNAME\nTo: $EMAIL_TO\nSubject: ‚ö†Ô∏è Reminder - No Commit Today!\n\nHello ${user},\n\nYou haven't committed anything today. Please push your updates before the end of the day.\n\nBest,\nCloud Team" | msmtp "$EMAIL_TO"
          done < non_committers_7pm.txt

      - name: Send 9 AM Warning Email
        if: github.event.schedule == '*/10 * * * *' && success() && hashFiles('final_non_committers.txt') != ''
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        run: |
          while IFS= read -r user; do
            EMAIL_TO="yogesh.more@thedatatechlabs.com"
            printf "From: $EMAIL_USERNAME\nTo: $EMAIL_TO\nSubject: üö® Urgent: No Commit Yesterday!\n\nHello ${user},\n\nYou didn't commit yesterday, despite a reminder. Please take immediate action.\n\nRegards,\nCloud Team" | msmtp "$EMAIL_TO"
          done < final_non_committers.txt

      - name: Send Summary Report to Admin
        if: github.event.schedule == '*/10 * * * *' && success()
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        run: |
          RECIPIENT_EMAIL="yogesh.more@thedatatechlabs.com"
          NON_COMMITTED_LIST=$(cat final_non_committers.txt | tr '\n' ', ')
          
          printf "From: $EMAIL_USERNAME\nTo: $RECIPIENT_EMAIL\nSubject: üìù Daily Commit Report\n\nHello Team,\n\nThese users did not commit yesterday:\n\n$NON_COMMITTED_LIST\n\nRegards,\nCloud Team" | msmtp "$RECIPIENT_EMAIL"
