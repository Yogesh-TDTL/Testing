name: Check Recent Committers and Notify Non-Committers

on:
  schedule:
    - cron: "30 13 * * 1-5"  # Runs at 7 PM IST (1:30 PM UTC) Monday to Friday
    - cron: "30 3 * * 1-5"  # Runs at 9 AM IST (3:30 AM UTC) Monday to Friday
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-recent-committers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Fetch Collaborators
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COLLABORATORS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/collaborators" | jq -r '.[].login' | grep -v "TDTL-Internal-Applications")
          echo "Filtered Collaborators: $COLLABORATORS"
          echo "COLLABORATORS=$(echo $COLLABORATORS | tr '\n' ' ')" >> $GITHUB_ENV
      
      - name: Install and Configure msmtp
        run: |
          sudo apt-get update && sudo apt-get install -y msmtp
          cat <<EOF > ~/.msmtprc
          defaults
          auth           login
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          logfile        ~/.msmtp.log
          account hostinger
          host smtp.hostinger.com
          port 587
          user "${{ secrets.EMAIL_USERNAME }}"
          password "${{ secrets.EMAIL_PASSWORD }}"
          from "${{ secrets.EMAIL_USERNAME }}"
          account default : hostinger
          EOF
          chmod 600 ~/.msmtprc
      
      - name: Check Recent Commit Activity and Notify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MANAGER_USERNAME: "ImranTDTL"
          EMAIL_USERNAME: "${{ secrets.EMAIL_USERNAME }}"
          MANAGER_EMAIL: "yogesh.more@thedatatechlabs.com"
        run: |
          for USER in $COLLABORATORS; do
            EMAIL_TO="yogesh.more@thedatatechlabs.com"
            echo "Checking commits for: $USER"
            
            RECENT_COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 "https://api.github.com/repos/${{ github.repository }}/commits?author=$USER&since=$(date -u -d '24 hours ago' +"%Y-%m-%dT%H:%M:%SZ")" \
                 | jq length)
            
            if [ "$RECENT_COMMITS" -eq 0 ]; then
              echo "No commits found for $USER. Sending reminder email..."
              printf "From: $EMAIL_USERNAME\nTo: $EMAIL_TO\nSubject: Reminder - No Commit Today!\n\nHello $USER,\n\nThis is a reminder that no commit has been recorded from your end in the repository today. Please push your updates before the end of the day.\n\nBest,\nCloud Team" | msmtp --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$EMAIL_TO"
              echo "Reminder email sent to: $EMAIL_TO"
            else
              echo "$USER has committed within the last 24 hours. No reminder needed."
            fi
          done
          
          if [ "${{ github.event.schedule }}" = "30 3 * * 1-5" ]; then
            for USER in $COLLABORATORS; do
              EMAIL_TO="yogesh.more@thedatatechlabs.com"
              FINAL_COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                   -H "Accept: application/vnd.github.v3+json" \
                   "https://api.github.com/repos/${{ github.repository }}/commits?author=$USER&since=$(date -u -d '14 hours ago' +"%Y-%m-%dT%H:%M:%SZ")" \
                   | jq length)
              
              if [ "$FINAL_COMMITS" -eq 0 ]; then
                echo "$USER still has not committed. Sending warning email..."
                printf "From: $EMAIL_USERNAME\nTo: $EMAIL_TO\nSubject: WARNING - No Commit Detected!\n\nHello $USER,\n\nYou have not committed any updates. Immediate action is required.\n\nRegards,\nCloud Team" | msmtp --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$EMAIL_TO"
                echo "Warning email sent to: $EMAIL_TO"
                
                echo "Sending Report to Manager..."
                printf "From: $EMAIL_USERNAME\nTo: $MANAGER_EMAIL\nSubject: Daily Commit Report - Non-Committers\n\nHello Team,\n\nThe following user has not committed any updates:\n\n$USER\n\nBest Regards,\nCloud Team" | msmtp --from=$EMAIL_USERNAME --host=smtp.hostinger.com --port=587 --auth=on --tls=on --user=$EMAIL_USERNAME --passwordeval "echo ${{ secrets.EMAIL_PASSWORD }}" "$MANAGER_EMAIL"
                echo "Report sent to manager: $MANAGER_EMAIL"
              else
                echo "$USER committed after the reminder. No warning or report needed."
              fi
            done
          fi
